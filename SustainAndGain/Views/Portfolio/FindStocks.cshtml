@model IEnumerable<SustainAndGain.Models.ModelViews.StockInfoVM>

@{
    ViewData["Title"] = "FindStocks";
}

<h1>FindStocks</h1>


<div id="divOrderEntry"></div>

<div id="divPendingOrders"></div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSustainable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReturnThisYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sector)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsSustainable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Symbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnThisYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sector)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sector)
                </td>
                <td>
                    <button id="@item.Symbol" onclick="OrderEntry('@item.Symbol', '@item.CompetitionId')">Buy</button>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ })  
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                </td>
            </tr>
        }
    </tbody>
</table>

<script>

  
    function OrderEntry(symbol, competitionId) {
        console.log("runningOrderEntry")
        // Make AJAX call
        var url = `/portfolio/OrderEntry/${symbol}/${competitionId}`;
        $.ajax({
            url: url,
            type: "GET",
            success: function (result) {
                $("#divOrderEntry").html(result);
                console.log("finishedOrderEntry");
            }
        });
    }

</script>
@*<script>
    window.onload = function getPendingOrders() {
        console.log("runningorders")
        //Get ID from competition
        var id = @Model.Select(i => i.CompetitionId);
        console.log(id);
        // Make AJAX call
        var url = "/portfolio/orders/" + id;
        $.ajax({
            url: url,
            type: "GET",
            success: function (result) {
                $("#divPendingOrders").html(result);
                console.log("finishedorders");
            }
        });
    }
</script>*@
